apply from: rootProject.file('gradle/publishing.gradle')
apply from: rootProject.file('gradle/license.gradle')

dependencies {
	api "commons-io:commons-io:2.6"
	api "org.hibernate:hibernate-validator:6.0.10.Final"
	api "org.springframework.boot:spring-boot-starter:${springBootVersion}"
	implementation "org.glassfish:javax.el:3.0.1-b10"
	
	testImplementation "junit:junit:4.12"
	testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"
	testImplementation "org.mockito:mockito-core:2.15.0"
	testImplementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	testImplementation "org.testfx:testfx-core:4.0.8-alpha"
	testImplementation "org.testfx:testfx-junit:4.0.8-alpha"
}

javadoc {
    excludes            = ['META-INF/**']
	description         = "Generates aggregated Javadocs"
	title               = "SpringFX API (${project.version})"	
    options.tags        = ['defaultValue']
    options.encoding    = "UTF-8"
    options.author      = true
    options.version     = true
    options.stylesheetFile project.file("src/javadoc/stylesheet.css")
    options.links       = ["https://docs.oracle.com/javase/8/docs/api/", 
    						"https://docs.oracle.com/javase/8/javafx/api/",
    						"https://docs.spring.io/spring-boot/docs/${springBootVersion}/api/"]
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    description 'An archive of the javadoc'
    classifier 'javadoc'
    from javadoc.destinationDir
}

jar.finalizedBy sourcesJar
jar.finalizedBy javadocJar

artifacts {
	archives jar
    archives sourcesJar
    archives javadocJar
}
