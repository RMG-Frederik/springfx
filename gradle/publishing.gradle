apply plugin: 'maven-publish'
apply plugin: "com.jfrog.bintray"

jar {
    manifest.attributes(
        "Built-By": project.builtBy,
        "Created-By": project.createdBy,
        "Build-Date": project.buildDate,
        "Build-Time": project.buildTime,
        "Build-Revision": project.buildRevision,
        "Specification-Title": project.name,
        "Specification-Version": project.version,
        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
    )
    metaInf {
        from(rootProject.files('.')) {
            include 'LICENSE*'
        }
    }
}

def pomConfig = {
    packaging 'jar'
    name project.name
    description project.projectDescription
    url project.projectUrl
    inceptionYear '2018'
    licenses {
        license([:]) {
            name project.projectLicence
            url project.projectLicenceUrl
            distribution 'repo'
        }
    }
    scm {
        url project.projectScm
    }
    developers {
        developer {
            id 'codecrafting'
            name 'Code Crafting (Admin)'
            email 'contact@codecrafting.net'
        }

        developer {
            id 'lucasmarotta'
            name 'Lucas Marotta'
            email 'lucas.marotta@codecrafting.net'
        }
    }
}

if (!project.hasProperty('bintrayUser')) ext.bintrayUser = ''
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = ''
if (!project.hasProperty('sonatypeUser')) ext.sonatypeUser = ''
if (!project.hasProperty('sonatypePass')) ext.sonatypePass = ''
ext.sonatypeUrl = (!project.version.endsWith('SNAPSHOT')) ? 'https://oss.sonatype.org/service/local/staging/deploy/maven2' : 'https://oss.sonatype.org/content/repositories/snapshots'

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    description 'An archive of the javadoc'
    classifier 'javadoc'
    from javadoc.destinationDir
}

jar.finalizedBy sourcesJar
jar.finalizedBy javadocJar

artifacts {
	archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenCustom(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
           	pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.projectDescription)
            }
        }
    }
    repositories {
        maven {
            url sonatypeUrl
            credentials {
                username = sonatypeUser
                password = sonatypePass
            }
        }
    }
}

bintray {
    user = project.bintrayUser
    key = project.bintrayApiKey
    publications = ['mavenCustom']
    override = true
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.projectDescription
        licenses = [project.projectLicenceTag]
        labels = ['javafx','spring','spring boot', 'javafx framework']
        websiteUrl = project.projectUrl
        issueTrackerUrl = project.projectIssues
        vcsUrl = project.projectScm
        publicDownloadNumbers = true
        githubRepo = 'codecrafting-net/springfx'
        version {
            name = project.version
            desc = project.projectDescription
            vcsTag = "${project.name}-${project.version}"
            gpg {
            	sign = true
            }
            /*mavenCentralSync {
                sync = true
                user = project.mavenUsername
                password = project.mavenPassword
            }*/
        }
    }
}
