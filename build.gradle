buildscript {
	ext {
		springBootVersion = "1.5.10.RELEASE"
		jacocoVersion = "0.8.0"
	}
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
    repositories {
        mavenLocal()
        mavenCentral()
	    maven {
	        url "https://repo.spring.io/libs-milestone"
	    }     
    }
}

apply plugin: "java-library"
apply plugin: "org.springframework.boot"
apply plugin: "maven"
apply plugin: "jacoco"
group = "net.codecrafting"
version = "0.1.0"
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencies {
	implementation "commons-io:commons-io:2.6"
	api "org.hibernate:hibernate-validator:5.0.3.Final"
	api "org.springframework.boot:spring-boot-starter:${springBootVersion}"
	
	testImplementation "junit:junit:4.12"
	testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"
	testImplementation "org.mockito:mockito-core:2.15.0"
	testImplementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	testImplementation "org.testfx:testfx-core:4.0.8-alpha"
	testImplementation "org.testfx:testfx-junit:4.0.8-alpha"
}

jacoco {
    toolVersion = "${jacocoVersion}"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

javadoc {
	description = "Generates aggregated Javadocs"
	title = "SpringFX API (${version})"	
    options.tags = [ "defaultValue" ]
    options.stylesheetFile rootProject.file("src/javadoc/stylesheet.css")
    options.author = true
}

task testsWithJacocoReports() {
    group 'verification'
    description 'Clear test > Junit Tests > Generate Jacoco Reports'
    dependsOn 'clean'
    dependsOn 'test'
    dependsOn 'jacocoTestReport'
    tasks.findByName('classes').mustRunAfter 'clean'
    tasks.findByName('jacocoTestReport').mustRunAfter 'test'
}
